/*

		Помимо досрочного перехода на последующую итерацию цикла (continue) и прерывания текущей итерации цикла (break),
		Существует и метод полного прерывания цикла, котоый тоже использует break.

		Синтаксис:

				outer:
				for (let i = 0; i < 3; i++) 
				{ 
						...
						break outer; // Полностью выйдет из цикла.
				}

				Вызов break <labelName> в цикле ниже ищет ближайший внешний цикл с такой меткой и переходит в его конец.


		Метки не позволяют прыгать куда угодно:
				
				
				break label; // не прыгает к метке ниже
				label: for (...)

*/

outer: for (let i = 0; i < 3; i++) {

  for (let j = 0; j < 3; j++) {

    let input = prompt(`Значение на координатах (${i},${j})`, '');

    // если пустая строка или Отмена, то выйти из обоих циклов
    if (!input) break outer; // (*)

    // сделать что-нибудь со значениями...
  }
}

alert('Готово!');