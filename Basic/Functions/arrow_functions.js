/*
		Функции - стреклки

				Назначение: 
						1) Уменьшить кол-во кода (для удобства)
						2) Предназначены для небольшого кода, который не имеет своего «контекста», выполняясь в текущем.
						
						При написании JavaScript-кода часто возникают ситуации, когда нам нужно написать небольшую функцию, 
						которая будет выполнена где-то ещё.

						Например:
						    arr.forEach(func) – func выполняется forEach для каждого элемента массива.
						    setTimeout(func) – func выполняется встроенным планировщиком.

				
				Особенности:
			    Условно "Не имеют" this (значение берется снаружи ( на уровень выше))
			    Не имеют переменную arguments (это не аргументы... если что).
			    Не могут быть вызваны с new.
			    У них также нет super.
					
					(
						Стрелочные функции не имеют собственного контекста выполнения, 
						из-за этого они наследуют сущности this и arguments от родительской функции
					)
					
				Общая запись: 
					let func = (arg1, arg2, ...argN) => expression
					
					Такой код создаёт функцию func с аргументами arg1..argN и 
					вычисляет expression с правой стороны с их использованием, возвращая результат

*/

// Если нет аргументов, укзаыватся пустые скобки 
let sayHi = () => alert("Hello!");

// Если 1 аргумент - МОЖНО опустить скобки
let double = n => n * 2;

//оБЫЧНОЕ ИСПОЛЬЗОВАНИЕ
let sum = (a, b) => a + b;

let sum = (a, b) => { 
  let result = a + b;
  return result;
}


 /*
		У стрелочных функций нет this

				Если использовать this в стрелочной функции, то this будет указывать на внешнюю функцию:

 */

		 let user = {
		  firstName: "Илья",
		  sayHi() {
		    let arrow = () => alert(this.firstName);
		    arrow();
		  }
		};

		user.sayHi(); // Илья