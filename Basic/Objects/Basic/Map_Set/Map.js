/*

		Map

			Map – это коллекция ключ/значение, как и Object. 
			Но основное отличие в том, что Map позволяет использовать ключи любого типа.
			Так, в качестве ключа может выступать и ОБЪЕКТ, напомню, что обычный объект переводит 
	    ключи в строку, поэтому если поместить в обычный объект ключ - объект, то он будет:
	    "[object Object]"


			Методы и свойства:

		    new Map() – создаёт коллекцию.
		    map.set(key, value) – записывает по ключу key значение value.
		    map.get(key) – возвращает значение по ключу или undefined, если ключ key отсутствует.
		    map.has(key) – возвращает true, если ключ key присутствует в коллекции, иначе false.
		    map.delete(key) – удаляет элемент по ключу key.
		    map.clear() – очищает коллекцию от всех элементов.
		    map.size – возвращает текущее количество элементов.
			
			Отличия:
				1) Что угодно может быть ключом, в том числе и ОБЪЕКТЫ.
				2) Есть дополнительные методы, свойство size.

*/

		// Пример
		let map = new Map();

		map.set("1", "str1");    // строка в качестве ключа
		map.set(1, "num1");      // цифра как ключ
		map.set(true, "bool1");  // булево значение как ключ

		// помните, обычный объект Object приводит ключи к строкам?
		// Map сохраняет тип ключей, так что в этом случае сохранится 2 разных значения:
		alert(map.get(1)); // "num1"
		alert(map.get("1")); // "str1"

		alert(map.size); // 3


/*
		Цепочка вызовов

				Каждый вызов map.set возвращает объект map, так что мы можем объединить вызовы в цепочку:
*/

		map.set("1", "str1")
		  .set(1, "num1")
		  .set(true, "bool1");

/*
		Перебор элементов

		map.keys() – возвращает итерируемый объект по ключам,
    map.values() – возвращает итерируемый объект по значениям,
    map.entries() – возвращает итерируемый объект по парам вида [ключ, значение], этот вариант используется по умолчанию в for..of.


*/

		let recipeMap = new Map([
		  ["огурец", 500],
		  ["помидор", 350],
		  ["лук",    50]
		]);

		// перебор по ключам (овощи)
		for (let vegetable of recipeMap.keys()) {
		  alert(vegetable); // огурец, помидор, лук
		}

		// перебор по значениям (числа)
		for (let amount of recipeMap.values()) {
		  alert(amount); // 500, 350, 50
		}

		// перебор по элементам в формате [ключ, значение]
		for (let entry of recipeMap) { // то же самое, что и recipeMap.entries()
		  alert(entry); // огурец,500 (и так далее)
		}

		recipeMap.forEach((value, key, map) => {
		  alert(`${key}: ${value}`); // огурец: 500 и так далее
		});

/*
		Создать Map из обычного объекта и наоборот

*/
		let obj = {
		  name: "John",
		  age: 30
		};

		// Map из объекта
		let map = new Map(Object.entries(obj));

		// Наоборот
		map.set('banana', 1);
		map.set('orange', 2);
		map.set('meat', 4);

		let obj_from_map = Object.fromEntries(map.entries()); // make a plain object (*)