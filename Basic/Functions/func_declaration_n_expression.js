/*

	Function Declaration и Function Expression

		Разлчичия:
			1) Синтаксис (то, как объявляются)
			2) ТО, когда функция создается движком JS и когда ее можно использовать
			3) То, где функция находится и где можно ее использовать

*/

/*
		1. Синтаксис

				Почему нужна (;) в конце Fucntion Expression?
					МЫ ЗНАЕМ, ЧТО:
							Нет необходимости в ; в конце блоков кода и синтаксических конструкций, 
							которые их используют, таких как if { ... }, for { }, function f { } и т.д.
					ПРИ ЭТОМ:
							Function Expression использует внутри себя инструкции присваивания:let sayHi = ...; как значение. 
							Это НЕ БЛОК кода, а ВЫРАЖЕНИЕ с ПРИСВАЕНИЕМ. 
							Таким образом, точка с запятой не относится непосредственно к Function Expression, она лишь завершает инструкцию.

*/
		
		// Function Declaration
		function sum(a, b) {
		  return a + b;
		}

		// Function Expression
		let sum = function(a, b) {
		  return a + b;
		};



/*
		2. Когда функция создается

			В JS есть такое понятие, как hoisting (поднятие). Интерпретатор, при запуске страницы, обрабатывает
			код в 2 этапа: 
					1-й этап - инициализация, 
					2-ой этап - выполнение.

			 На первом этапе функции (Function Declaration) поднимаются Компилятором JS в самый вверх над остальным кодом (условно),
			 а затем уже следуют объявления переменных, т.е (Function Expression). 

*/

				// Таким образом, код выведет 1:

				foo(); // Выведет 1
				function foo(){ console.log(1); } // ФУНКЦИЯ понимается вврх компилятором JS
				foo = function(){ console.log(2); };

				// Это произойдет потому что движок интерпретирует этот фрагмент вот так:

				function foo(){ console.log(1); }
				foo(); // 1
				foo = function(){ console.log(2); };


/*
		3. Где функция находится

				Function Declaration можно использовать В ПРЕДЕЛАХ того БЛОКА, ГДЕ ОНА ОБЪЯВЛЕНА, но НЕ СНАРУЖИ.
				при этом блоком моет быть весь код, отдельная фукнцция или другая конструкция { }.  

*/

	// Пример работы Function Declaration
		
		let age = 16; // присвоим для примера 16

		if (age < 18) {
		  welcome();               // \   (выполнится)
		                           //  |
		  function welcome() {     //  |
		    alert("Привет!");      //  |  Function Declaration доступно
		  }                        //  |  во всём блоке кода, в котором объявлено
		                           //  |
		  welcome();               // /   (выполнится)

		} else {

		  function welcome() {
		    alert("Здравствуйте!");
		  }
		}

		// здесь фигурная скобка закрывается,
		// поэтому Function Declaration, созданные внутри блока кода выше -- недоступны отсюда.

		welcome(); // Ошибка: welcome is not defined


	// Пример работы Function Expression 

		let age = prompt("Сколько Вам лет?", 18);

		let welcome = (age < 18) ?
		  function() { alert("Привет!"); } :
		  function() { alert("Здравствуйте!"); };

		welcome(); // теперь всё в порядке