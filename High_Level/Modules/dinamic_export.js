/*

		Динамический экспорт

				Инструкции экспорта и импорта, которые мы рассматривались в import_export, называются «статическими».

				Суть статических модулей:
						
						1) Во-первых, мы не можем динамически задавать никакие из параметров import.
							 Путь к модулю должен быть строковым примитивом и не может быть вызовом функции. Вот так работать не будет:
						2) Во-вторых, мы не можем делать импорт в зависимости от условий или в процессе выполнения.
							 Т.е их не получится использовать в блоках кода

						Всё это следствие того, что цель директив import/export – задать костяк структуры кода. 
						Благодаря им она может быть проанализирована, модули могут быть собраны в один файл специальными инструментами, 
						а неиспользуемые экспорты удалены. Это возможно только благодаря тому, что всё статично.


				Динамический импорт.

						Так или иначе, мы можем сделать динамический импорт через специальное выражение import(), 
						которое загружает модуль и возвращает Promise, результатотм которого становится объект модуля.

								<script>
									  async function load() {
									    let say = await import('./say.js');
									    say.hi(); // Привет!
									    say.bye(); // Пока!
									    say.default(); // Модуль загружен (экспорт по умолчанию)!
									  }
								</script>
								<button onclick="load()">Нажми меня</button>

						Хотя import() и выглядит похоже на вызов функции, на самом деле это специальный синтаксис, так же, как, например, super().
								
*/