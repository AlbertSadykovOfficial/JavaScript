/*

		LocalStorage и sessionStorage

				Следует использовать для хранения локальных данных, которые не нужны серверу для формирования ответа.

				localStorage   - Совместно используется между всеми вкладками и окнами с одинаковым источником (Переживае перезапуск браузера)
				sessionStorage - Разделяется в рамках вкладки браузера, среди ифреймов из того же источника (Переживает» перезагрузку страницы (но не закрытие вкладки))

				(Обычно используют localStorage)

				Объекты веб-хранилища localStorage и sessionStorage позволяют хранить пары ключ/значение в браузере.

				    1) key и value должны быть строками.
				    2) Лимит 2 Мб+, зависит от браузера.
				    3) Данные не имеют «времени истечения».
				    4) Данные привязаны к источнику (домен/протокол/порт).


				API :
				    setItem(key, value)	– сохранить пару ключ/значение.
				    getItem(key)				– получить данные по ключу key.
				    removeItem(key)			– удалить значение по ключу key.
				    clear() 						– удалить всё.
				    key(index)					– получить ключ на заданной позиции.
				    length							– количество элементов в хранилище.

				    Используйте Object.keys для получения всех ключей.
				    Можно обращаться к ключам как к обычным свойствам объекта, в этом случае событиеstorage не срабатывает.
						
						(Как можно заметить, поведение похоже на Map)

				Событие storage:

			    1) Срабатывает при вызове setItem, removeItem, clear.
			    2) Содержит все данные об произошедшем обновлении (key/oldValue/newValue), url документа и объект хранилища storageArea.
			    3) Срабатывает на всех объектах window, которые имеют доступ к хранилищу, кроме того, где оно было сгенерировано 
			    	(внутри вкладки для sessionStorage, глобально для localStorage).


*/
		// Пример - установка и получение значений:
				localStorage.setItem('test', 1);
				alert( localStorage.getItem('test') ); // 1


		// Пример - вывести все ключи и их значения
				let keys = Object.keys(localStorage);

				for(let key of keys) 
				{
				  	alert(`${key}: ${localStorage.getItem(key)}`);
				}

		// Пример  - срабатывает при обновлениях, сделанных в том же хранилище из других документов (с разных вкладок)
				window.onstorage = event => {
				  if (event.key != 'now') return;
				  alert(event.key + ':' + event.newValue + " at " + event.url);
				};

				localStorage.setItem('now', Date.now());