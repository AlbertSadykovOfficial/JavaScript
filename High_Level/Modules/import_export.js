/*
		
		Импорт и экспорт модулей

				Реэкспорт

						Если мы хотим написать библитеку, то логично будет как-то обосабливать некоторые объекты или функции 
						в разные модули, чтобы все было удобочитаемо. Много модулей вместе образуют пакет.
						Это может выглядеть так:

								auth/
								    index.js
								    user.js
								    helpers.js
								    tests/
								        login.js
								    providers/
								        github.js
								        facebook.js
								        ...

						Но чтобы воспользоваться функционалом пакета, нам нужно будет экспортировать давольно много модулей - это непрактично.
						Чтобы все было удобно, следует использовать реэкспорт.

						Суть реэкспорта:
								При реэкспорте мы создаем главный файл пакета, где импортируем нужные модули и экспортируем их, 
								тогда, чтобы воспользоваться пакетом, нужно будет импортировать только этот главный файл, а не все подряд. 

				export:

				    Перед объявлением класса/функции/…:
				        export [default] class/function/variable ...
				    Отдельный экспорт:
				        export {x [as y], ...}.
				    Реэкспорт:
				        export {x [as y], ...} from "module"
				        export * from "module" (не реэкспортирует export default).
				        export {default [as y]} from "module" (реэкспортирует только export default).


				import:

				    Именованные экспорты из модуля:
				        import {x [as y], ...} from "module"
				    Импорт по умолчанию:
				        import x from "module"
				        import {default as x} from "module"
				    Всё сразу:
				        import * as obj from "module"
				    Только подключить модуль (его код запустится), но не присваивать его переменной:
				        import "module"

*/