/*

			Функции 

					Функции в JS - Объекты первого класса.
					Фукнции представлены как объекты особого типа
					
					В JavaScript с функциями можно делать то же самое, что можно делать с сущностями других типов, таких, как Object, String, Number. 
					Функции можно передавать как параметры другим функциям. Такие функции, переданные другим, обычно выступают в роли функций обратного вызова (коллбэков). 
					Функции можно назначать переменным, хранить их в массивах, и так далее. Именно поэтому функции в JS — это объекты первого класса.
					
					Свойства функций:

					    name – имя функции. Обычно берётся из объявления функции, но если там нет – JavaScript пытается понять его из контекста.
					    length – количество аргументов в объявлении функции. Троеточие («остаточные параметры») не считается.
					
					Преимущества свойств:

							Так как функции могут содержать дополнительные свойства, многие известные JavaScript-библиотеки искусно используют эту возможность.
							Они создают «основную» функцию и добавляют множество «вспомогательных» функций внутрь первой. 
							Например, библиотека jQuery создаёт функцию с именем $ и кладет остальные функции внутрь нее.

					Функции первого класса:
							Обычные фукнции, которые принимают простые объекты как параметры и возвращают простые объекты.
						
					Функции высшего порядка:
							Функции высшего порядка — это функции, которые работают с другими функциями, либо принимая их в виде параметров, либо возвращая их.
							Проще говоря, функцией высшего порядка называется такая функция, которая принимает функцию как аргумент или возвращает функцию в виде выходного значения.
							Примеры:
									Array.prototype.map - возвращает массив, обработав входной массив переданной функцией callback;
									Array.prototype.filter - фильтрует данные массива по условию, если условие true, объект добавляется в массив.
									Array.prototype.reduce - 

*/

		// Так как фукнции - это объекты, то им можно назначать свойсва
		// Но так делать не надо.
				function greeting() { console.log('Hello World'); }
				greeting.lang = 'English';

		// Пример использования фукцнии высшего прорядка - map:
				const arr1 = [1, 2, 3];
				const arr2 = arr1.map(function(item) {
				  return item * 2;
				});
				console.log(arr2);


		//  Своя фукнция высшего порядка - альтерантива MAP
		// Для вывода длины строки.
		const strArray = ['JavaScript', 'Python', 'PHP', 'Java', 'C'];

		function mapForEach(arr, fn) 
		{
		  const newArray = [];
		  for(let i = 0; i < arr.length; i++) 
		  {
		    newArray.push( fn(arr[i]) );
		  }
		  return newArray;
		}
		const lenArray = mapForEach(strArray, item => item.length );
		// выводит [ 10, 6, 3, 4, 1 ]
		console.log(lenArray);