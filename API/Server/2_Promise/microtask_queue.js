/*
			
		Очередб микрозадач

				Асинхронные задачи требуют правильного управления. 
				Для этого стандарт предусматривает внутреннюю очередь PromiseJobs, более известную как «очередь микрозадач (microtask queue)» (термин V8).
				
				Или, проще говоря, когда промис выполнен, его обработчики .then/catch/finally попадают в очередь. Они пока не выполняются. 
				Движок JavaScript берёт задачу из очереди и выполняет её, когда он освободится от выполнения текущего кода.

				Пример:
						handler = alert('Промис выполнен')
						{
							promise.then(handler);  // Добавляем handler в очередь.
								...
							alert('Код выполнен');
						} 
						-- выполнение скрипта завершено, можно вызывать следующий скрипт из очереди
						ЗАПУСКАЕМ handler из очереди

						Результат:
								1) Код выполнен
								2) Промис выполнен

				Но что если порядок имеет значение для нас? Как мы можем вывести код выполнен после промис выполнен?

						Пример:
								Promise.resolve()
								  .then(() => alert("промис выполнен!"))
								  .then(() => alert("код выполнен"));
								  
								Результат:
										1) Промис выполнен
										2) Код выполнен

*/